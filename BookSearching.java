/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package projectlibrary;

import edu.sit.cs.db.CSDbDelegate;
import java.util.ArrayList;
import java.util.HashMap;
import javax.swing.JOptionPane;

/**
 *
 * @author Sae
 */
public class BookSearching extends javax.swing.JFrame {

    CSDbDelegate db ;
    String status;
    String id;
    
    public BookSearching(String id,String status) {
        super("Book Searching");
        this.status = status;
        this.id = id;
        initComponents();
        jPanel1.setVisible(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jRadioButtonMenuItem1 = new javax.swing.JRadioButtonMenuItem();
        jMenuItem1 = new javax.swing.JMenuItem();
        keysearch = new javax.swing.JTextField();
        search = new javax.swing.JButton();
        keyword = new javax.swing.JLabel();
        booksearch = new javax.swing.JLabel();
        main = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        table = new javax.swing.JTable();
        clear = new javax.swing.JButton();

        jRadioButtonMenuItem1.setSelected(true);
        jRadioButtonMenuItem1.setText("jRadioButtonMenuItem1");

        jMenuItem1.setText("jMenuItem1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Searching");
        setResizable(false);

        keysearch.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                keysearchMousePressed(evt);
            }
        });

        search.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        search.setText("Search");
        search.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchActionPerformed(evt);
            }
        });

        keyword.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        keyword.setText("Put keyword that you want to search(Bookname,ISBN,Authors)");

        booksearch.setFont(new java.awt.Font("Stencil", 0, 36)); // NOI18N
        booksearch.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        booksearch.setText("Book Searching System");

        main.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        main.setText("Main Menu");
        main.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mainActionPerformed(evt);
            }
        });

        table.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Book Name", "ISBN", "Authors"
            }
        ));
        jScrollPane1.setViewportView(table);

        clear.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        clear.setText("Clear");
        clear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 375, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(clear)
                        .addGap(155, 155, 155)))
                .addContainerGap(34, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(33, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(clear)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(booksearch, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(210, 210, 210)
                        .addComponent(main))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(43, 43, 43)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(223, 223, 223)
                        .addComponent(search))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(81, 81, 81)
                        .addComponent(keysearch, javax.swing.GroupLayout.PREFERRED_SIZE, 375, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 23, Short.MAX_VALUE)
                .addComponent(keyword)
                .addGap(19, 19, 19))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addComponent(booksearch, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(keyword, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(keysearch, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(search)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 32, Short.MAX_VALUE)
                .addComponent(main)
                .addGap(20, 20, 20))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void mainActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mainActionPerformed
        dispose();
        if(status == "Member"){
            MainMenu mainmem = new MainMenu(id,status);
            mainmem.setVisible(true);
        }
        else{
            MainMenuAdmin mainad = new MainMenuAdmin(id,status);
            mainad.setVisible(true);
        }
    }//GEN-LAST:event_mainActionPerformed

    private void searchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchActionPerformed
        CSDbDelegate db = new CSDbDelegate("cs14sitkmutt.me","3306","CSC105_G1","CSC105_G1","CSC105_G1");
        db.connect();
        // check if input is int so it will be only ISBN
        if(keysearch.getText().isEmpty()){
            JOptionPane.showMessageDialog(rootPane,"Please insert key in the box");
        }
        else{
            if(isISBN()){
                String sql = "SELECT * FROM LibraryBook WHERE ISBN = '"+ keysearch.getText()+ "'";
                ArrayList<HashMap> list = db.queryRows(sql);
                boolean delSuccess = db.executeQuery(sql);
                if(list.isEmpty()){
                    JOptionPane.showMessageDialog(rootPane, "Sorry, we don't has this book in this Library");
                }
                else{
                    for(HashMap l : list){
                        jPanel1.setVisible(true);
                        if(l.get("ISBN").equals(keysearch.getText())){
                            table.setValueAt(l.get("Title"), 0, 0);
                            table.setValueAt(l.get("ISBN"), 0, 1);
                            table.setValueAt(l.get("Authors"), 0, 2);
                            break;
                        }
                    }
                }
            db.disconnect();
          }
            else{
                String sql2 = "SELECT * FROM LibraryBook WHERE Title = '"+ keysearch.getText()+ "'";
                ArrayList<HashMap> list2 = db.queryRows(sql2);
                System.out.println(list2);
                boolean delSuccess2 = db.executeQuery(sql2);
                if(list2.isEmpty()){
                    //JOptionPane.showMessageDialog(rootPane, "Sorry, we don't has this book in this Library");
                    String sql3 = "SELECT * FROM LibraryBook WHERE Authors = '"+ keysearch.getText()+ "'";
                    ArrayList<HashMap> list3 = db.queryRows(sql3);
                    System.out.println(list3);
                    boolean delSuccess3 = db.executeQuery(sql3);

                    if(list3.isEmpty()){
                        JOptionPane.showMessageDialog(rootPane, "Sorry, we don't has this book in this Library");
                    }
                    else{
                        if(list3.size() >= table.getRowCount()){
                            // add row
                        }
                        for(HashMap l : list3){
                            jPanel1.setVisible(true);
                            if(l.get("Authors").equals(keysearch.getText())){
                                table.setValueAt(l.get("Title"), 0, 0);
                                table.setValueAt(l.get("ISBN"), 0, 1);
                                table.setValueAt(l.get("Authors"), 0, 2);
                                break;
                            }
                        }
                    }
                }
                else{
                    for(HashMap l : list2){
                        jPanel1.setVisible(true);
                        if(l.get("Title").equals(keysearch.getText())){
                            table.setValueAt(l.get("Title"), 0, 0);
                            table.setValueAt(l.get("ISBN"), 0, 1);
                            table.setValueAt(l.get("Authors"), 0, 2);                      
                            break;
                        }
                    }
                }
            db.disconnect();
            }
        }
    }//GEN-LAST:event_searchActionPerformed

    private void keysearchMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_keysearchMousePressed
        keysearch.setText(null);
    }//GEN-LAST:event_keysearchMousePressed

    private void clearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearActionPerformed
        table.setValueAt(null, 0, 0);
        table.setValueAt(null, 0, 1);
        table.setValueAt(null, 0, 2);
        jPanel1.setVisible(false);
    }//GEN-LAST:event_clearActionPerformed
    
    public boolean isISBN(){
        boolean keyinputisint = false;
        int isbn;
        try {
            isbn = Integer.parseInt(keysearch.getText());
            keyinputisint = true;
            }   catch (NumberFormatException e) {  
                }
        //if(!keysearch.getText().isEmpty()) && keysearch.getText().equalsInteger.parseInt(keysearch.getText(){
        //keyinput = true;
        //}
        return keyinputisint;
    }
    /**
     * @param args the command line arguments
     */

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel booksearch;
    private javax.swing.JButton clear;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JRadioButtonMenuItem jRadioButtonMenuItem1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField keysearch;
    private javax.swing.JLabel keyword;
    private javax.swing.JButton main;
    private javax.swing.JButton search;
    private javax.swing.JTable table;
    // End of variables declaration//GEN-END:variables
}
